<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 定义注解驱动，作用是注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。 -->
    <mvc:annotation-driven />
    <!--
    这一句执行的动作相当于：
    注解请求映射
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="logNDCInteceptor"/>    日志拦截器，这是你自定义的拦截器
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="byteArray_hmc" />
                <ref bean="string_hmc" />
                <ref bean="resource_hmc" />
                <ref bean="source_hmc" />
                <ref bean="xmlAwareForm_hmc" />
                <ref bean="jaxb2RootElement_hmc" />
                <ref bean="jackson_hmc" />
            </list>
        </property>
    </bean>
    <bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
    <bean id="string_hmc" class="org.springframework.http.converter.StringHttpMessageConverter" />
    <bean id="resource_hmc" class="org.springframework.http.converter.ResourceHttpMessageConverter" />
    <bean id="source_hmc" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" /><
    <bean id="xmlAwareForm_hmc" class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
    <bean id="jaxb2RootElement_hmc" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
    <bean id="jackson_hmc" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
    -->

    <context:component-scan base-package = "com.taotao.web.controller" />

    <!-- 定义视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 这里注意，如果扫描的包里包含了service，那么这里必须配置占位符，否则taotao_manage_url的value注入不成功
     这可能是spring的机制问题，在spring容器中先注入了taotao，然后springmvc又扫描到了，但是没有占位符，就会错误
     而如果想不加这个bean，就需要让mvc扫描的范围限定在controller-->
    <!--<bean-->
            <!--class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--&lt;!&ndash; 允许JVM参数覆盖 &ndash;&gt;-->
        <!--<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />-->
        <!--&lt;!&ndash; 忽略没有找到的资源文件 &ndash;&gt;-->
        <!--<property name="ignoreResourceNotFound" value="true" />-->
        <!--&lt;!&ndash; 配置资源文件 &ndash;&gt;-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:env.properties</value>-->
                <!--<value>classpath:httpclient.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 这里id不能错，否则会找不到 -->
    <bean id="multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--限制文件上传最大值-->
        <property name="maxUploadSize" value="5242880" />
    </bean>
</beans>